length(W$Variable)
roxygenise()
Mayores(W)
Mayores(W,1:2)
W
W<-data.frame(Variable=LETTERS[1:6],F1=c(78,32,95,22,47,12),F2=c(1,7,2,6,9,3))
W
Mayores(W)
Mayores(W,1:2)
Mayores(W,1:3,Vector=T)
Mayores(W,1:3,Vector=F)
Mayores(W,1:3,OrdenarPor=3,Vector=F)
Mayores(W,1:3,OrdenarPor=3)
?Modas
roxygenise()
?Menores
?menores
roxygenise()
?mayores
?menores
roxygenise()
?mayores
sustituye<-function(Previo,Nuevo,Donde){
data.frame(lapply(Donde, function(x) {
gsub(Previo,Nuevo,x)              }))
}
W<-data.frame(Variable=LETTERS[1:6],F1=c(78,32,95,22,47,12),F2=c(1,7,2,6,9,3))
sustituye("32",99,W)
sustituye(B,99,W)
sustituye("B",99,W)
W<-data.frame(Variable=LETTERS[1:6],F1=c(78,32,95,2,47,12),F2=c(1,7,2,6,9,3))
sustituye(2,99,W)
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,1,3,2,2)),F2=c(1,7,2,6,9,3))
sustituye(2,99,W)
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3))
sustituye(2,99,W)
factor(c(2,3,5,3,2,2))
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3))
sustituye(2,99,W)
summary(sustituye(2,99,W))
summary(W)
summary(sustituye(2,5,W))
summary(sustituye(2,5,W))
sustituye(2,5,W)
sustituye(5,2,W)
summary(sustituye(5,2,W))
W
summary(W)
sustituir(5,2,W)
sustituye(5,2,W)
summary(sustituye(5,2,W))
sustituye(2,"R",x)
x
sustituye(2,"R",W)
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,32,2)),F2=c(1,7,2,6,9,3))
sustituye(2,"R",W)
sustituye(2|A,"R",W)
sustituye(2|"A","R",W)
sustituye(2:3,"R",W)
numerico<-function(BD){
data.frame(lapply(BD,as.numeric))
}
rm(numerico())
rm(numerico)
numerico(W)
roxygenise()
?VectoraLista
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3),F3=c("Juan","Pedro","María","Fernanda","José","Pía"),F4=factor(c("H","H","M","M","H","M")))
numerico(W)
lapply(W,as.numeric)
lapply(W[2:3],as.numeric)
(1:20,-Columnas)
W2<-W
W[2:3]<-lapply(W[2:3],as.numeric)
W
summary(W)
summary(W2)
numerico<-function(BD,Columnas){
BD[Columnas]<-lapply(BD[Columnas],as.numeric)
}
W<-W2
summary(W)
numerico(W)
roxygenise()
W<-W2
numerico(W)
W
summary(W)
numerico(W)
summary(W)
Columnas<-2:3
lapply(BD[Columnas],as.numeric)
lapply(W[Columnas],as.numeric)
W[Columnas]<- lapply(W[Columnas],as.numeric)
W
summary(W)
roxygenise()
library(roxygen2)
roxygenise()
numerico(x)
roxygenise()
numerico(x)
x
W
summary(W)
summary(W2)
numerico(W2,2:3)
W2
summary(W2)
numerico<-function(BD,Columnas){
data.frame(lapply(BD[Columnas],as.numeric))
}
numerico(W2)
numerico(W2[2:3])
numerico(W2,2:3)
roxygenise()
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3),F3=c("Juan","Pedro","María","Fernanda","José","Pía"),F4=factor(c("H","H","M","M","H","M")))
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3),F3=c("Juan","Pedro","María","Fernanda","José","Pía"),F4=factor(c("H","H","M","M","H","M")))
numerico(W)
numerico(W,2:3)
summary(W)
W[2:3]<-numerico(W,2:3)
summary(W)
c(4,3,5,6,"8",8)
numerico(c(4,3,5,6,"8",8))
x<-c(4,3,5,6,"8",8)
numerico(x)
lapply(x[Columnas],as.numeric)
numerico(W)
lapply(x,as.numeric)
as.vector(lapply(x,as.numeric))
unlist(lapply(x,as.numeric))
numerico(x)
numericoX<-function(x,Columnas){
if(is.data.frame(x)){
data.frame(lapply(x[Columnas],as.numeric))
} else if(is.vector(x)){
unlist(lapply(x,as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}
}
numericoX(x)
numericoX(W)
numericoX(W,2:3)
W[2:3]<-numericoX(W,2:3)
summary(W)
W<-data.frame(Variable=LETTERS[1:6],F1=factor(c(2,3,5,3,2,2)),F2=c(1,7,2,6,9,3),F3=c("Juan","Pedro","María","Fernanda","José","Pía"),F4=factor(c("H","H","M","M","H","M")))
summary(W)
numericoX(W)
numericoX(x,34)
summary(W)
numerico(W$F1)
is.data.frame(W$F1)
is.vector(W$F1)
is.factor(W$F1)
numerico(W$F1)
Wf1<-W$F1
numerico(Wf1)
numerico<-function(x,Columnas){
if(is.data.frame(x)){
data.frame(lapply(x[Columnas],as.numeric))
} else if(is.vector(x)){
unlist(lapply(x,as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}
}
numerico(Wf1)
is.vector((Wf1))
is.vector(Wf1)
is.vector(as.character(Wf1))
numerico<-function(x,Columnas){
if(is.data.frame(x)){
data.frame(lapply(x[Columnas],as.numeric))
} else if(is.vector(as.character(x))){
unlist(lapply(x,as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
numerico(Wf1)
Wf1
numerico<-function(x,Columnas){
if(is.data.frame(x)){
data.frame(lapply(x[Columnas],as.numeric))
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
numerico(Wf1)
numerico(W$F1)
numerico(x)
paste3 <- function(...,sep=", ") {
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
}
paste3(x)
paste3(x,Wf1)
paste3(W$Variable,Wf1)
paste3(W$Variable,Wf1,sep=" y ")
paste3(W$Variable,W$F2,sep=" y ")
paste3(W$Variable,W$F1,sep=" y ")
cat(W$Variable,W$F1)
paste(W$Variable,W$F1)
paste(W$Variable,W$F1,sep =" y ")
paste(W$Variable,W$F1,sep =", ")
W[2,2]<-NA
paste(W$Variable,W$F1,sep =", ")
paste2(c("a","b", "c", NA), c("A","B", NA, NA))
paste3 <- function(...,sep=", ") {
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
}
paste3(x,Wf1)
y<-c(1:5,NA)
paste3(x,y)
y<-c(1:5)
paste3(x,y)
z<-c("A","B","C",NA)
paste3(x,y,z)
paste3(c(x,x),y,z)
paste3(c(x,x,x),y,z)
paste3(c(x,x,x,x),y,z)
paste3(c(x,x,x,x,x),y,z)
paste3(x,c(y,y),z)
paste3(x,c(y,y,y),z)
70000/10
70000/10/6
70000/10/6/4
L<-list(x,y,z)
L
length(L)
dim(L)
lengths(L)
length(unique(lengths(L))) == 1
length(unique(lengths(c(3,3,3)))) == 1
paste3 <- function(...,sep=", ",reciclar=FALSE) {
if(length(unique(lengths(L))) == 1 | reciclar ==FALSE){
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {stop(cat("Los vectores tiene dimensiones diferentes:",lengths(list(...))))}}
paste3(x,y,z)
paste3 <- function(...,sep=", ",reciclar=FALSE) {
if(length(unique(lengths(L))) == 1 | reciclar ==TRUE){
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {stop(cat("Los vectores tiene dimensiones diferentes:",lengths(list(...))))}}
paste3(x,y,z)
paste3 <- function(...,sep=", ",reciclar=FALSE) {
if(length(unique(lengths(L))) == 1 | reciclar ==FALSE){
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {
mensaje<-cat("Los vectores tiene dimensiones diferentes:",lengths(list(...)))
stop(mensaje)}}
paste3(x,y,z)
paste3(x,y,z,reciclar = T)
paste3 <- function(...,sep=", ",reciclar=FALSE) {
if(length(unique(lengths(L))) == 1 | reciclar ==FALSE){
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {
mensaje<-paste("Los vectores tiene dimensiones diferentes:",lengths(list(...)))
stop(mensaje)}}
paste3(x,y,z,reciclar = T)
paste3 <- function(...,sep=", ",reciclar=FALSE) {
if(length(unique(lengths(L))) == 1 | reciclar ==TRUE){
L <- list(...)
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {
mensaje<-paste("Los vectores tiene dimensiones diferentes:",VectoraLista(lengths(list(...))))
stop(mensaje)}}
paste3(x,y,z)
paste3(x,z,y)
Modas <- function(x) {
ux <- unique(x)
tab <- tabulate(match(x, ux))
ux[tab == max(tab)] }
Modas(x)
Modas(y)
Modas(z)
z
y
x
Modas(x)
x2<-c(x,"3")
Modas(x2)
?mean
?sample
sample(1:10,30,replace = TRUE)
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
Modas(sample(1:10,30,replace = TRUE))
x <- c(rep(1,3),rep(2,4),rep(3,2),,rep(4,1),rep(5,4))
x <- c(rep(1,3),rep(2,4),rep(3,2),rep(4,1),rep(5,4))
x
x <- c(rep(1,3),rep(2,4),rep(3,2),rep(4,1),rep(5,4),6)
Modas(x)
permutacion<-function(x,y){choose(x,y)*factorial(y)}
permutacion(5,2)
permutacion(2,5)
choose(5,2)
choose(2,5)
?choose
permutacion(5,3)
permutacion(3,2)
combinacion(3,2)
choose(3,2)
numericoX<-function(x,Columnas){
if(is.data.frame(x)){
z<-data.frame(lapply(x[Columnas],as.numeric))
x[Columnas]<-z
return(x)
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
W
summary(W)
numericoX(W)
numericoX(W,2:3)
summary(numericoX(W,2:3))
?numerico
?ValoraLista
library(roxygen2)
roxygenise()
?VectoraLista
roxygenise()
?numerico2
?numerico
roxygenise()
?numerico
numerico(x2)
as.numeric(x2)
numericoX<-function(x,Columnas){
if(is.data.frame(x)){
z<-data.frame(lapply(x[Columnas],as.character))
z<-data.frame(lapply(z,as.numeric))
x[Columnas]<-z
return(x)
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
numericoX(W)
x<-W
data.frame(lapply(x[Columnas],as.character))
Columnas<-2:3
data.frame(lapply(x[Columnas],as.character))
z<-data.frame(lapply(x[Columnas],as.character))
z
z<-data.frame(lapply(z,as.numeric))
z
summary(z)
x
summary(x)
x[Columnas]<-z
summary(x)
numericoX<-function(x,Columnas){
if(is.data.frame(x)){
z<-data.frame(lapply(x[Columnas],as.character))
z<-data.frame(lapply(z,as.numeric))
x[Columnas]<-z
return(x)
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
numericoX(W,2:3)
summary(numericoX(W,2:3))
summary(W)
numerico<-function(x,Columnas){
if(is.data.frame(x)){
z<-data.frame(lapply(x[Columnas],as.character))
z<-data.frame(lapply(z,as.numeric))
x[Columnas]<-z
return(x)
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
#' @rdname numerico
numerico2<-function(x,Columnas){
if(is.data.frame(x)){
x<-data.frame(lapply(x[Columnas],as.character))
x<-data.frame(lapply(x[Columnas],as.numeric))
return(x)
} else if(is.vector(as.character(x))){
unlist(lapply(as.character(x),as.numeric))
} else {
stop("Es necesario x sea un vector o un data.frame")
}}
roxygenize()
roxygenize()
roxygenize()
x<-1:10
y<-LETTERS[1:10]
y[5]<-NA
# Uso
paste3(x,y)
length(unique(lengths(L))) == 1
length(unique(lengths(L)))
lengths(L)
paste3(x,y)
roxygenize()
paste3(x,y)
paste4 <- function(...,sep=", ",reciclar=FALSE) {
L <- list(...)
if(length(unique(lengths(L))) == 1 | reciclar ==TRUE){
L <- lapply(L,function(x) {x[is.na(x)] <- ""; x})
ret <-gsub(paste0("(^",sep,"|",sep,"$)"),"",
gsub(paste0(sep,sep),sep,
do.call(paste,c(L,list(sep=sep)))))
is.na(ret) <- ret==""
ret
} else {
mensaje<-paste("Los vectores tiene dimensiones diferentes:",VectoraLista(lengths(list(...))))
stop(mensaje)}}
paste4(x,y)
rm(paste3)
roxygenize()
paste3(x,y)
z.test(1.65)
z.test(1.65,.95)
z.test(1.65,.05)
z.test(1:10,8)
z.test(1:10,.95)
t.test(1:10)
Datos<-c(1.85, 1.86, 1.87, 1.92, 1.93, 1.94, 1.94, 1.95, 1.96, 2.01, 2.02, 2.02, 2.03, 2.03, 2.04, 2.09, 2.09, 2.10, 2.10, 2.10, 2.11, 2.11, 2.11, 2.12, 2.12, 2.12, 2.13, 2.13, 2.14, 2.14)
t.test(Datos, conf.level =.95)
mean(Datos)
?t.dist
?rnorm
?dt
sum(Datos)
sum(Datos)/3
sum(Datos)/30
Datos<-c(1.85, 1.92, 1.94, 2.01, 2.02, 2.09, 2.09, 2.10, 2.12, 2.14)
mean(Datos)
sd(Datos)
mean(Datos)-2.262*sd(Datos)
t.test(Datos)
2.028-1.958333333333333333333333333333333
u<-2.028-1.958333333333333333333333333333333
u/sd(Datos)
sd(Datos)
Datos
u*sqrt(10)/sd(Datos)
t.test(Datos)
mean(Datos)-2.262*sd(Datos)/sqrt(10)
t.test
methods(t.test)
getAnywhere(t.test)
getAnywhere(t.test.default)
install.packages("BSDA")
library(BSDA)
z.test(Datos)
?z.test
?BSDA::z.test
BSDA::z.test(Datos)
t.test(Datos)
t.test(Datos,sigma.x=sd(Datos))
z.test(Datos,sigma.x=sd(Datos))
mean(Datos)-1.96*sd(Datos)/sqrt(10)
mean(Datos)-1.96*(sqrt(sd(Datos)^2)*9/10)/sqrt(10)
z.test(Datos,conf.level = ,95)
z.test(Datos,conf.level = .95)
